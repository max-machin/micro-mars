name: micro-mars-services
version: "3"
services:
  api-gateway:
    networks:
      - kafka-kafdrop_default
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./api-gateway/.env
    depends_on:
      - mysql
    develop:
      watch:
        - action: sync
          path: ./api-gateway
          target: /usr/src/app
          ignore:
            - node_modules

  service-mailer:
    build:
      context: ./service-mailing
      dockerfile: Dockerfile
    restart: always
    networks:
      - kafka-kafdrop_default

  service-command:
    networks:
      - kafka-kafdrop_default
    build:
      context: ./service-command
      dockerfile: Dockerfile
    depends_on:
      - mysql
    develop:
      watch:
        - action: sync
          path: ./service-command
          target: /usr/src/app
          ignore:
            - node_modules

  service-auth:
    networks:
      - kafka-kafdrop_default
    build:
      context: ./service-auth
      dockerfile: Dockerfile
    env_file:
      - ./service-auth/.env
    develop:
      watch:
        - action: sync
          path: ./service-auth
          target: /usr/src/app
          ignore:
            - node_modules

  service-front-gallery:
    build:
      context: ./front-gallery
      dockerfile: Dockerfile
    env_file:
      - ./front-gallery/.env
    ports:
      - 5173:5173
    volumes:
      - ./front-gallery:/app
      - /app/node_modules
    command: npm run dev

  mysql:
    image: mysql:latest
    ports:
      - "3306:3306"
    env_file:
      - ./api-gateway/.env
    command: --init-file /data/application/init.sql
    volumes:
      - dbData:/var/lib/mysql
      - ./api-gateway/init.sql:/data/application/init.sql
    networks:
      - kafka-kafdrop_default
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    restart: always
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - kafka-kafdrop_default

volumes:
  dbData:

networks:
  kafka-kafdrop_default:
    external: true
